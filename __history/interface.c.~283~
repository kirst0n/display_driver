#include "interface.h"
#include "LCD.h"
#include <string.h>
//#pragma once


#define NULL 0


menuItem* menu_item;
uint8_t button_push; //-none, 1- cansel, 2-down, 3-up, 4-enter

float paramScreen_test;

displayData dsData;
screenItem *tmpScreen;
errorList* tmpErr;
acceptScr acceptScreen;



menuItem menu_Diag0 =   {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,TYPE1,TYPE1,0,0,0,"Диагностика"};
menuItem menu_Diag1_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,9,TYPE_VALUABLE_3_1,TYPE1,0,0,0,"Задан.[%]"};
menuItem menu_Diag1_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,10,TYPE_VALUABLE_2_2,TYPE1,0,0,0,"Задан.[мА]"};
menuItem menu_Diag1_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,8,TYPE_VALUABLE_3_1,TYPE1,0,0,0,"Полж.[%]"};
menuItem menu_Diag1_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,9,TYPE_VALUABLE_2_2,TYPE1,0,0,0,"Полж.[мА]"};
menuItem menu_Diag1_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,9,TYPE_VALUABLE_3_1,TYPE1,0,0,0,"Рссгл.[%]"};
menuItem menu_Diag1_5 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,13,TYPE_VALUABLE_3_1,TYPE1,0,0,0,"Тек.п.шт.[гр]"};
menuItem menu_Diag1_6 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,8,TYPE_VALUABLE_2_2,TYPE1,0,0,0,"Вх.давл."};
menuItem menu_Diag1_7 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,10,TYPE_VALUABLE_2_2,TYPE1,0,0,0,"Вых.давл.1"};
menuItem menu_Diag1_8 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,10,TYPE_VALUABLE_2_2,TYPE1,0,0,0,"Вых.давл.2"};
menuItem menu_Diag1_9 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,13,TYPE_VALUABLE_3_1,TYPE1,0,0,0,"Верх.огр.[гр]"};
menuItem menu_Diag1_10 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE_VALUABLE_3_1,TYPE1,0,0,0,"Ниж.огр.[гр]"};
menuItem menu_Diag1_11 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,TYPE_VALUABLE_3_1,TYPE1,0,0,0,"Темп.[гр.С]"};
menuItem menu_Diag1_12 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,TYPE_VALUABLE_INT,TYPE1,0,0,0,"Наработ.[ч]"};
menuItem menu_Diag1_13 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,9,TYPE_VALUABLE_INT,TYPE1,0,0,0,"Кол.цикл."};
menuItem menu_Diag1_14 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,FIRMWARE_TEXT_SIZE,TYPE1,TYPE1,0,0,0,FIRMWARE};
menuItem menu_Diag1_15 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,8,TYPE_VALUABLE_INT,TYPE1,0,0,0,"Ид.номер"};
menuItem menu_Diag1_16 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,7,TYPE_PREV_TO,TYPE1,0,0,0,"Пред.ТО"};
menuItem menu_Diag1_17 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,7,TYPE_NEXT_TO,TYPE1,0,0,0,"След.ТО"};
menuItem menu_Diag1_18 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,6,TYPE_ERRORS,TYPE1,0,0,0,"Ошибки"};

menuItem menu_Mode_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,0,0,0,"Режим работы"};

menuItem menu_ModeAuto_1_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,16,MENU_SELECT_TYPE_AUTO,TYPE1,SAVE_COMMAND_AUTO,0,0,"1.Автоматический"};
menuItem menu_ModeManual_1_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,TYPE1,TYPE1,0,0,0,"2.Руч. управление"};
menuItem menu_ModeSpeed_1_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,TYPE1,TYPE1,0,0,0,"3.Углы и скорость"};
menuItem menu_ModeSetup_1_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,TYPE1,TYPE1,0,0,0,"4.Настройки"};

menuItem menu_ModeManual_1_1_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,16,MENU_SELECT_TYPE_MAN1,TYPE1,SAVE_COMMAND_MAN1,0,0,"1.Руч. управ. 1%"};
menuItem menu_ModeManual_1_1_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,16,MENU_SELECT_TYPE_MAN5,TYPE1,SAVE_COMMAND_MAN5,0,0,"2.Руч. управ. 5%"};
menuItem menu_ModeManual_1_1_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,MENU_SELECT_TYPE_MAN10,TYPE1,SAVE_COMMAND_MAN10,0,0,"3.Руч. управ. 10%"};
menuItem menu_ModeManual_1_1_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,MENU_SELECT_TYPE_MAN25,TYPE1,SAVE_COMMAND_MAN25,0,0,"4.Руч. управ. 25%"};
menuItem menu_ModeManual_1_1_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,MENU_SELECT_TYPE_DIAG,TYPE1,SAVE_COMMAND_DIAG,0,0,"5.Диагностика I/P"};

menuItem menu_ModeSetup_1_3_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,14,TYPE1,TYPE1,0,0,0,"1.Конфигурация"};
menuItem menu_ModeSetup_1_3_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,TYPE1,TYPE1,0,0,0,"2.Автостарт"};
menuItem menu_ModeSetup_1_3_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,9,TYPE1,TYPE1,0,0,0,"3.Пределы"};
menuItem menu_ModeSetup_1_3_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,15,TYPE1,TYPE1,0,0,0,"4.Регулирование"};
menuItem menu_ModeSetup_1_3_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,TYPE1,TYPE1,0,0,0,"5.Серв. настройки"};

menuItem menu_ModeSetupConf_1_3_0_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,TYPE1,TYPE1,0,0,0,"1.Полож. вращение"};
menuItem menu_ModeSetupConf_1_3_0_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,13,TYPE1,TYPE1,0,0,0,"2.Тип привода"};
menuItem menu_ModeSetupConf_1_3_0_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,19,TYPE1,TYPE1,0,0,0,"3.Действ. позицион."};
menuItem menu_ModeSetupConf_1_3_0_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,20,TYPE1,TYPE1,0,0,0,"4.Действ. обр. связи"};
menuItem menu_ModeSetupConf_1_3_0_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,16,TYPE1,TYPE1,0,0,0,"5.Характеристика"};

menuItem menu_ModeSetupAStart_1_3_1_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,14,0,TYPE_LIGHT_START,SAVE_COMMAND_LIGHT_START,0,0,"1.Легкий старт"};
menuItem menu_ModeSetupAStart_1_3_1_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,18,0,TYPE_LIMITS_BORDER,SAVE_COMMAND_LIMITS_BORDER,0,0,"2.Конеч. положения"};
menuItem menu_ModeSetupAStart_1_3_1_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,18,0,TYPE1,SAVE_COMMAND_DIAGNOSTIC,0,0,"3.Характерист. I/P"};
menuItem menu_ModeSetupAStart_1_3_1_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,18,0,TYPE_FULL_START,SAVE_COMMAND_FULL_START,0,0,"4.Полный автостарт"};
menuItem menu_ModeSetupAStart_1_3_1_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,18,0,TYPE_AUTO_PARAM,SAVE_COMMAND_AUTO_PARAM,0,0,"5.Автоподб. парам."};

menuItem menu_ModeSetupLim_1_3_2_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,TYPE1,TYPE1,SAVE_COMMAND_VALVE_0,0,0,"1.Клапан 0%"};
menuItem menu_ModeSetupLim_1_3_2_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,13,TYPE1,TYPE1,SAVE_COMMAND_VALVE_100,0,0,"2.Клапан 100%"};
menuItem menu_ModeSetupLim_1_3_2_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,15,TYPE1,TYPE1,SAVE_COMMAND_LOW_LIMIT,0,0,"3.Нижний предел"};
menuItem menu_ModeSetupLim_1_3_2_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,16,TYPE1,TYPE1,SAVE_COMMAND_HIGH_LIMIT,0,0,"4.Верхний предел"};
menuItem menu_ModeSetupLim_1_3_2_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,SAVE_COMMAND_OTSECHKA_0,0,0,"5.Отсечка 0%"};
menuItem menu_ModeSetupLim_1_3_2_5 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,14,TYPE1,TYPE1,SAVE_COMMAND_OTSECHKA_100,0,0,"6.Отсечка 100%"};

menuItem menu_ModeSetupReg_1_3_3_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,SAVE_COMMAND_PINC,0,0,"1.P increase"};
menuItem menu_ModeSetupReg_1_3_3_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,SAVE_COMMAND_PDEC,0,0,"2.P decrease"};
menuItem menu_ModeSetupReg_1_3_3_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,SAVE_COMMAND_IINC,0,0,"3.I increase"};
menuItem menu_ModeSetupReg_1_3_3_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,SAVE_COMMAND_IDEC,0,0,"4.I decrease"};
menuItem menu_ModeSetupReg_1_3_3_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,SAVE_COMMAND_DINC,0,0,"5.D increase"};
menuItem menu_ModeSetupReg_1_3_3_5 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,SAVE_COMMAND_DDEC,0,0,"6.D decrease"};
menuItem menu_ModeSetupReg_1_3_3_6 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,TYPE1,TYPE1,SAVE_COMMAND_DEADZ_DOWN,0,0,"7.Зона неч. сброс"};
menuItem menu_ModeSetupReg_1_3_3_7 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,18,TYPE1,TYPE1,SAVE_COMMAND_DEADZ_UP,0,0,"8.Зона неч. нагнет"};

menuItem menu_ModeSetupServ_1_3_4_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,6,TYPE1,TYPE1,0,0,0,"1.Язык"};
menuItem menu_ModeSetupServ_1_3_4_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,9,TYPE1,TYPE1,0,0,0,"2.Дисплей"};
menuItem menu_ModeSetupServ_1_3_4_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,TYPE1,TYPE1,0,0,0,"3.Калибровка тока"};
menuItem menu_ModeSetupServ_1_3_4_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,16,TYPE1,TYPE1,SAVE_COMMAND_DEAFULT_SETTINGS,0,0,"4.Сброс настроек"};
menuItem menu_ModeSetupServ_1_3_4_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,15,TYPE1,TYPE1,0,0,0,"5.Сервисный код"};

menuItem menu_ModeSetupConf_1_3_0_0_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,MENU_SELECT_TYPE_ROTAT_FORV,TYPE1,SAVE_COMMAND_ROTAT_FORV,0,0,"1.По часовой"};
menuItem menu_ModeSetupConf_1_3_0_0_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,16,MENU_SELECT_TYPE_ROTAT_BACK,TYPE1,SAVE_COMMAND_ROTAT_BACK,0,0,"2.Против часовой"};

menuItem menu_ModeSetupConf_1_3_0_1_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,MENU_SELECT_TYPE_DRV_ROT,TYPE1,SAVE_COMMAND_DRV_ROT,0,0,"1.Поворотный"};
menuItem menu_ModeSetupConf_1_3_0_1_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,10,MENU_SELECT_TYPE_DRV_LINE,TYPE1,SAVE_COMMAND_DRV_LINE,0,0,"2.Линейный"};

menuItem menu_ModeSetupConf_1_3_0_2_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,8,MENU_SELECT_TYPE_POS_FORV,TYPE1,SAVE_COMMAND_POS_FORV,0,0,"1.Прямой"};
menuItem menu_ModeSetupConf_1_3_0_2_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,10,MENU_SELECT_TYPE_POS_BACK,TYPE1,SAVE_COMMAND_POS_BACK,0,0,"2.Обратный"};

menuItem menu_ModeSetupConf_1_3_0_3_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,8,MENU_SELECT_TYPE_FEEDBACK_FORV,TYPE1,SAVE_COMMAND_FEEDBACK_FORV,0,0,"1.Прямой"};
menuItem menu_ModeSetupConf_1_3_0_3_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,10,MENU_SELECT_TYPE_FEEDBACK_BACK,TYPE1,SAVE_COMMAND_FEEDBACK_BACK,0,0,"2.Обратный"};

menuItem menu_ModeSetupConf_1_3_0_4_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,10,MENU_SELECT_TYPE_CHAR_LINE,TYPE1,SAVE_COMMAND_CHAR_LINE,0,0,"1.Линейная"};
menuItem menu_ModeSetupConf_1_3_0_4_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,17,MENU_SELECT_TYPE_CHAR_PERC,TYPE1,SAVE_COMMAND_CHAR_PERC,0,0,"2.Равнопроцентная"};
menuItem menu_ModeSetupConf_1_3_0_4_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,18,MENU_SELECT_TYPE_CHAR_USER,TYPE1,SAVE_COMMAND_CHAR_USER,0,0,"3.Пользовательская"};

menuItem menu_ModeSetupServ_1_3_4_0_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,9,MENU_SELECT_TYPE_LANG_RU,TYPE1,SAVE_COMMAND_LANG_RU,0,0,"1.Русский"};
menuItem menu_ModeSetupServ_1_3_4_0_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,MENU_SELECT_TYPE_LANG_EN,TYPE1,SAVE_COMMAND_LANG_EN,0,0,"2.Английский"};
menuItem menu_ModeSetupServ_1_3_4_0_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,MENU_SELECT_TYPE_LANG_CH,TYPE1,SAVE_COMMAND_LANG_CH,0,0,"3.Китайский"};

menuItem menu_ModeSetupServ_1_3_4_1_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,MENU_SELECT_TYPE_DISP_NORM,TYPE1,SAVE_COMMAND_DISP_NORM,0,0,"1.Нормальный"};
menuItem menu_ModeSetupServ_1_3_4_1_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,14,MENU_SELECT_TYPE_DISP_REV,TYPE1,SAVE_COMMAND_DISP_REV,0,0,"2.Перевернутый"};

menuItem menu_ModeSetupServ_1_3_4_2_0 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,10,TYPE1,TYPE1,SAVE_COMMAND_IN4MA,0,0,"1.Вход 4мА"};
menuItem menu_ModeSetupServ_1_3_4_2_1 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,TYPE1,TYPE1,SAVE_COMMAND_IN20MA,0,0,"2.Вход 20мА"};
menuItem menu_ModeSetupServ_1_3_4_2_2 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,11,TYPE1,TYPE1,SAVE_COMMAND_OUT4MA,0,0,"3.Выход 4мА"};
menuItem menu_ModeSetupServ_1_3_4_2_3 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,12,TYPE1,TYPE1,SAVE_COMMAND_OUT20MA,0,0,"4.Выход 20мА"};
menuItem menu_ModeSetupServ_1_3_4_2_4 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,22,TYPE1,TYPE1,0,0,0,"5.Кал. угла +/- 45 гр."};
menuItem menu_ModeSetupServ_1_3_4_2_5 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,19,TYPE1,TYPE1,SAVE_COMMAND_ANGLE_PLUS45,0,0,"6.Кал. угла +45 гр."};
menuItem menu_ModeSetupServ_1_3_4_2_6 = {(void*)0,(void*)0,(void*)0,(void*)0,(void*)0,0,0,0,19,TYPE1,TYPE1,SAVE_COMMAND_ANGLE_MINUS45,0,0,"7.Кал. угла -45 гр."};

errorList menu_Error_1[15] = {{(void*)0,(void*)0,(void*)0,0,0,18,17,0,"Обрыв цепи датчика","положения клапана",""},
{(void*)0,(void*)0,(void*)0,0,0,18,13,0,"Обрыв цепи катушки","IP конвертера",""},
{(void*)0,(void*)0,(void*)0,0,0,13,10,12,"Ошибка записи","настроек в","основное ПЗУ"},
{(void*)0,(void*)0,(void*)0,0,0,13,11,13,"Ошибка чтения","настроек из","основного ПЗУ"},
{(void*)0,(void*)0,(void*)0,0,0,13,10,12,"Ошибка записи","настроек в","основное ПЗУ"},
{(void*)0,(void*)0,(void*)0,0,0,13,11,13,"Ошибка чтения","настроек из","основного ПЗУ"},
{(void*)0,(void*)0,(void*)0,0,0,15,15,5,"Превышение тока","входной токовой","петли"},
{(void*)0,(void*)0,(void*)0,0,0,17,7,0,"Низкое напряжение","питания",""},
{(void*)0,(void*)0,(void*)0,0,0,17,14,13,"Превышение напря-","жения выходной","токовой петли"},
{(void*)0,(void*)0,(void*)0,0,0,12,7,0,"Нет движения","клапана",""},
{(void*)0,(void*)0,(void*)0,0,0,18,18,7,"Медленное движение","конечных положений","клапана"},
{(void*)0,(void*)0,(void*)0,0,0,18,17,0,"Ошибка определения","положения клапана",""},
{(void*)0,(void*)0,(void*)0,0,0,18,16,13,"Ошибка определения","зоны нечувствит.","IP конвертера"},
{(void*)0,(void*)0,(void*)0,0,0,17,0,0,"Ошибка автостарта","",""},
{(void*)0,(void*)0,(void*)0,0,0,18,16,0,"Ошибка направления","движения клапана",""}};




screenItem test_screen = {(void*)0,0,0,(float*)0,3.14,2,3,"[мА]"};

screenItem scSetValve0Per	 = {(void*)0,0,0,(float*)0,3.14,2,1," [%]"};
screenItem scSetValve100Per	 = {(void*)0,0,0,(float*)0,3.14,3,1," [%]"};
screenItem scSetLimit0Per	 = {(void*)0,0,0,(float*)0,3.14,2,1," [%]"};
screenItem scSetLimit100Per	 = {(void*)0,0,0,(float*)0,3.14,3,1," [%]"};
screenItem scSetCut0Per		 = {(void*)0,0,0,(float*)0,3.14,2,1," [%]"};
screenItem scSetCut100Per	 = {(void*)0,0,0,(float*)0,3.14,3,1," [%]"};

screenItem scSetPinc		 = {(void*)0,0,0,(float*)0,3.14,3,3," [ ]"};
screenItem scSetPdec		 = {(void*)0,0,0,(float*)0,3.14,3,3," [ ]"};
screenItem scSetIinc		 = {(void*)0,0,0,(float*)0,3.14,3,3," [ ]"};
screenItem scSetIdec		 = {(void*)0,0,0,(float*)0,3.14,3,3," [ ]"};
screenItem scSetDinc		 = {(void*)0,0,0,(float*)0,3.14,3,3," [ ]"};
screenItem scSetDdec		 = {(void*)0,0,0,(float*)0,3.14,3,3," [ ]"};

screenItem scSetDeadZoneUp	 = {(void*)0,0,0,(float*)0,3.14,1,3," [В]"};
screenItem scSetDeadZoneDown = {(void*)0,0,0,(float*)0,3.14,1,3," [В]"};
screenItem scSetInput4mA	 = {(void*)0,0,0,(float*)0,3.14,2,2,"[мА]"};
screenItem scSetInput20mA	 = {(void*)0,0,0,(float*)0,3.14,2,2,"[мА]"};
screenItem scSetOutput4mA	 = {(void*)0,0,0,(float*)0,3.14,2,2,"[мА]"};
screenItem scSetOutput20mA	 = {(void*)0,0,0,(float*)0,3.14,2,2,"[мА]"};
screenItem scSetAngle45DegPlus = {(void*)0,0,0,(float*)0,3.14,3,2,"[Гр]"};
screenItem scSetAngle45DegMinus = {(void*)0,0,0,(float*)0,3.14,3,2,"[Гр]"};

 menuItem* VoidToMenu (void* item)
{
	menuItem* result;
	result = (menuItem*) item;
	return result;
}

 screenItem* VoidToScreen (void* item)
{
	screenItem* result;
	result = (screenItem*) item;
	return result;
}

 errorList* VoidToErrList (void* item)
{
	errorList* result;
	result = (errorList*) item;
	return result;
}

void MakeErrorList(errorList *str, void *Next, void *Previous, void *Parent, uint16_t index)
{
   str->Next = Next;
   str->Previous = Previous;
   str->ParentMenuItem = Parent;
   str->index = index;
}

void ErrorListData(void)
{
uint8_t i;
uint16_t index;
index = 0;

	if(dsData.codeErorr>0)
	{
		for (i = 0; i < NUMBER_OF_ERRORS; i++)
		{

			if(((dsData.codeErorr>>i)&0x01)==0x01)
			{
			index++;
			if(index==1)
				{
					menu_Error_1[i].Previous = (void*)0;
					menu_Error_1[i].Next = (void*)0;
					menu_Error_1[i].index = index ;
					menu_Diag1_18.NextScreen = &menu_Error_1[i];
				}
				else
				{
					menu_Error_1[i-1].Next = &menu_Error_1[i];
					menu_Error_1[i].Previous = &menu_Error_1[i-1];
					menu_Error_1[i].index = index ;
					menu_Error_1[i].Next = (void*)0;
				}

			}
		}
    }
}


void MakeMenu(menuItem *str, void *Next, void *Previous, void *Parent, void *Child, void *Screen)
{
   str->Next = Next;
   str->Previous = Previous;
   str->Parent =  Parent;
   str->Child = Child;
   str->NextScreen = Screen;
}

void SetAddrFloatToScreen(screenItem *screen, float* value, void *Prev)
{
   screen->Previous = Prev;
   screen->value_addr = value;
   screen->current_value = *value;
}

void SetMenu()
{
	switch (dsData.modeCtrl) {
	case MODE_CTRL_AUTO:
	{menu_ModeAuto_1_0.Select=1; menu_ModeManual_1_1.Select=0; menu_ModeSpeed_1_2.Select=0;
	 menu_ModeManual_1_1_0.Select=0;
	 menu_ModeManual_1_1_1.Select=0;
	 menu_ModeManual_1_1_2.Select=0;
	 menu_ModeManual_1_1_3.Select=0;
	 menu_ModeManual_1_1_4.Select=0;
	break;}

	case MODE_CTRL_MANUAL1:
	{menu_ModeAuto_1_0.Select=0; menu_ModeManual_1_1.Select=1; menu_ModeSpeed_1_2.Select=0;
	 menu_ModeManual_1_1_0.Select=1;
	 menu_ModeManual_1_1_1.Select=0;
	 menu_ModeManual_1_1_2.Select=0;
	 menu_ModeManual_1_1_3.Select=0;
	 menu_ModeManual_1_1_4.Select=0;
	break;}

	case MODE_CTRL_MANUAL5:
	{menu_ModeAuto_1_0.Select=0; menu_ModeManual_1_1.Select=1; menu_ModeSpeed_1_2.Select=0;
	 menu_ModeManual_1_1_0.Select=0;
	 menu_ModeManual_1_1_1.Select=1;
	 menu_ModeManual_1_1_2.Select=0;
	 menu_ModeManual_1_1_3.Select=0;
	 menu_ModeManual_1_1_4.Select=0;
	break;}
		case MODE_CTRL_MANUAL10:
	{menu_ModeAuto_1_0.Select=0; menu_ModeManual_1_1.Select=1; menu_ModeSpeed_1_2.Select=0;
	 menu_ModeManual_1_1_0.Select=0;
	 menu_ModeManual_1_1_1.Select=0;
	 menu_ModeManual_1_1_2.Select=1;
	 menu_ModeManual_1_1_3.Select=0;
	 menu_ModeManual_1_1_4.Select=0;
	break;}
		case MODE_CTRL_MANUAL25:
	{menu_ModeAuto_1_0.Select=0; menu_ModeManual_1_1.Select=1; menu_ModeSpeed_1_2.Select=0;
	 menu_ModeManual_1_1_0.Select=0;
	 menu_ModeManual_1_1_1.Select=0;
	 menu_ModeManual_1_1_2.Select=0;
	 menu_ModeManual_1_1_3.Select=1;
	 menu_ModeManual_1_1_4.Select=0;
	break;}

		case MODE_CTRL_DIAGNOST:
	{menu_ModeAuto_1_0.Select=0; menu_ModeManual_1_1.Select=1; menu_ModeSpeed_1_2.Select=0;
	 menu_ModeManual_1_1_0.Select=0;
	 menu_ModeManual_1_1_1.Select=0;
	 menu_ModeManual_1_1_2.Select=0;
	 menu_ModeManual_1_1_3.Select=0;
	 menu_ModeManual_1_1_4.Select=1;
	break;}
	}

	switch (dsData.rotationMode) {
	case MODE_ROTATION_RIGHT: 	{menu_ModeSetupConf_1_3_0_0_0.Select=1; menu_ModeSetupConf_1_3_0_0_1.Select=0;break;}
	case MODE_ROTATION_LEFT: 	{menu_ModeSetupConf_1_3_0_0_0.Select=0; menu_ModeSetupConf_1_3_0_0_1.Select=1;break;}
	}

	switch (dsData.driverMode) {
	case MODE_DRIVER_LINE: 		{menu_ModeSetupConf_1_3_0_1_1.Select=1; menu_ModeSetupConf_1_3_0_1_0.Select=0;break;}
	case MODE_DRIVER_ROTATE: 	{menu_ModeSetupConf_1_3_0_1_1.Select=0; menu_ModeSetupConf_1_3_0_1_0.Select=1;break;}
	}

	switch (dsData.directionPosMode) {
	case MODE_DIRECTION_FORWARD:  	{menu_ModeSetupConf_1_3_0_2_0.Select=1; menu_ModeSetupConf_1_3_0_2_1.Select=0;break;}
	case MODE_DIRECTION_REVERSE: 	{menu_ModeSetupConf_1_3_0_2_0.Select=0; menu_ModeSetupConf_1_3_0_2_1.Select=1;break;}
	}

	switch (dsData.feedbackMode) {
	case MODE_FEEDBACK_FORWARD:  	{menu_ModeSetupConf_1_3_0_3_0.Select=1; menu_ModeSetupConf_1_3_0_3_1.Select=0;break;}
	case MODE_FEEDBACK_REVERSE: 	{menu_ModeSetupConf_1_3_0_3_0.Select=0; menu_ModeSetupConf_1_3_0_3_1.Select=1;break;}
	}

	switch (dsData.charachMode) {
	case MODE_CHARACTER_LINE:  		{menu_ModeSetupConf_1_3_0_4_0.Select=1; menu_ModeSetupConf_1_3_0_4_1.Select=0;menu_ModeSetupConf_1_3_0_4_2.Select=0;break;}
	case MODE_CHARACTER_PERCENT: 	{menu_ModeSetupConf_1_3_0_4_0.Select=0; menu_ModeSetupConf_1_3_0_4_1.Select=1;menu_ModeSetupConf_1_3_0_4_2.Select=0;break;}
	case MODE_CHARACTER_USER: 		{menu_ModeSetupConf_1_3_0_4_0.Select=0; menu_ModeSetupConf_1_3_0_4_1.Select=0;menu_ModeSetupConf_1_3_0_4_2.Select=1;break;}
	}

	switch (dsData.lang) {
	case MODE_LANG_RUS: {menu_ModeSetupServ_1_3_4_0_0.Select=1; menu_ModeSetupServ_1_3_4_0_1.Select=0;menu_ModeSetupServ_1_3_4_0_2.Select=0;break;}
	case MODE_LANG_ENG: {menu_ModeSetupServ_1_3_4_0_0.Select=0; menu_ModeSetupServ_1_3_4_0_1.Select=1;menu_ModeSetupServ_1_3_4_0_2.Select=0;break;}
	case MODE_LANG_CHI: {menu_ModeSetupServ_1_3_4_0_0.Select=0; menu_ModeSetupServ_1_3_4_0_1.Select=0;menu_ModeSetupServ_1_3_4_0_2.Select=1;break;}
	}

	switch (dsData.displayMode) {
	case MODE_DISPLAY_NORMAL:  	{menu_ModeSetupServ_1_3_4_1_0.Select=1; menu_ModeSetupServ_1_3_4_1_1.Select=0;break;}
	case MODE_DISPLAY_REVERSE: 	{menu_ModeSetupServ_1_3_4_1_0.Select=0; menu_ModeSetupServ_1_3_4_1_1.Select=1;break;}
	}


}



void InitMenu(void)
{
LCD_init();
dsData.pushedButton=0;
dsData.curScreen = 0;
dsData.command = TYPE_IDLE;

//настройки по диагностике
dsData.settingPer = 10.0;
dsData.settingCur = 4.11;
dsData.positionPer = 11.1;
dsData.positionCur = 4.2;
dsData.errorPer = 1.0;
dsData.curPosStockDeg = 45.1;
dsData.inPressure= 10.2;
dsData.outPressure1 = 11.0;
dsData.outPressure2 = 55.6;
dsData.topLimitDeg = 81.5;
dsData.botLimitDeg = 20.3;
dsData.temperature = 55.6;
dsData.workingTime = 38996; //вообще написано в часах, можно в минутах или секундах мерить и выводить в часах;
dsData.idNumber = 0x55;
dsData.lastService.day = 1;
dsData.lastService.month = 2;
dsData.lastService.year = 20;
dsData.nextService.day=31;
dsData.nextService.month=12;
dsData.nextService.year=55;

//настройки режимов работы и установки параметров
dsData.modeCtrl = MODE_CTRL_MANUAL5;
dsData.rotationMode = MODE_ROTATION_RIGHT;
dsData.driverMode = MODE_DRIVER_LINE;
dsData.directionPosMode = MODE_DIRECTION_FORWARD;
dsData.feedbackMode = MODE_FEEDBACK_FORWARD;
dsData.charachMode = MODE_CHARACTER_LINE;
dsData.lang = MODE_LANG_RUS;
dsData.displayMode = MODE_DISPLAY_NORMAL;

dsData.valve0Per = 0.1;
dsData.valve100Per = 100.2;

dsData.limit0Per = 0.0;
dsData.limit100Per = 100.0;

dsData.cut0Per = 1.5;
dsData.cut100Per = 98.5;

dsData.Pinc = 1.0;
dsData.Iinc= 2.0;
dsData.Dinc= 3.0;

dsData.Pdec= 4.0;
dsData.Idec= 5.0;
dsData.Ddec= 61.0;

dsData.deadZoneUp = 1.4;
dsData.deadZoneDown = 0.9;



dsData.input4mA = 4;
dsData.input20mA = 20;

dsData.output4mA = 4;
dsData.output20mA = 20;

dsData.angle45DegPlus = 120.3;
dsData.angle45DegMinus = 12.55;


	 SetAddrFloatToScreen(&test_screen,&paramScreen_test,&menu_ModeAuto_1_0);

	 SetAddrFloatToScreen(&scSetValve0Per,	&dsData.valve0Per	,&menu_ModeSetupLim_1_3_2_0);
	 SetAddrFloatToScreen(&scSetValve100Per,&dsData.valve100Per	,&menu_ModeSetupLim_1_3_2_1);
	 SetAddrFloatToScreen(&scSetLimit0Per,	&dsData.limit0Per	,&menu_ModeSetupLim_1_3_2_2);
	 SetAddrFloatToScreen(&scSetLimit100Per,&dsData.limit100Per	,&menu_ModeSetupLim_1_3_2_3);
	 SetAddrFloatToScreen(&scSetCut0Per,	&dsData.cut0Per		,&menu_ModeSetupLim_1_3_2_4);
	 SetAddrFloatToScreen(&scSetCut100Per,	&dsData.cut100Per	,&menu_ModeSetupLim_1_3_2_5);

	 SetAddrFloatToScreen(&scSetPinc,		&dsData.Pinc	   	,&menu_ModeSetupReg_1_3_3_0);
	 SetAddrFloatToScreen(&scSetPdec,		&dsData.Pdec	   	,&menu_ModeSetupReg_1_3_3_1);
	 SetAddrFloatToScreen(&scSetIinc,		&dsData.Iinc	   	,&menu_ModeSetupReg_1_3_3_2);
	 SetAddrFloatToScreen(&scSetIdec,		&dsData.Idec	   	,&menu_ModeSetupReg_1_3_3_3);
	 SetAddrFloatToScreen(&scSetDinc,		&dsData.Dinc	   	,&menu_ModeSetupReg_1_3_3_4);
	 SetAddrFloatToScreen(&scSetDdec,		&dsData.Ddec	   	,&menu_ModeSetupReg_1_3_3_5);

	 SetAddrFloatToScreen(&scSetDeadZoneDown,&dsData.deadZoneDown,&menu_ModeSetupReg_1_3_3_6);
	 SetAddrFloatToScreen(&scSetDeadZoneUp,	&dsData.deadZoneUp 	,&menu_ModeSetupReg_1_3_3_7);


	 SetAddrFloatToScreen(&scSetInput4mA,	&dsData.input4mA	,&menu_ModeSetupServ_1_3_4_2_0);
	 SetAddrFloatToScreen(&scSetInput20mA,	&dsData.input20mA	,&menu_ModeSetupServ_1_3_4_2_1);
	 SetAddrFloatToScreen(&scSetOutput4mA,	&dsData.output4mA	,&menu_ModeSetupServ_1_3_4_2_2);
	 SetAddrFloatToScreen(&scSetOutput20mA,	&dsData.output20mA	,&menu_ModeSetupServ_1_3_4_2_3);

	 SetAddrFloatToScreen(&scSetAngle45DegPlus,	&dsData.angle45DegPlus	,&menu_ModeSetupServ_1_3_4_2_5);
	 SetAddrFloatToScreen(&scSetAngle45DegMinus,&dsData.angle45DegMinus	,&menu_ModeSetupServ_1_3_4_2_6);

     //             curr     Next            Prev            Parent      Child
	 MakeMenu(&menu_Diag0,  (void*)0,        (void*)0,       (void*)0,   &menu_Diag1_0, (void*)0);
     //             curr      Next            Prev            Parent       Child
	 MakeMenu(&menu_Diag1_0,  &menu_Diag1_1,  &menu_Diag1_18,       &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_1,  &menu_Diag1_2,  &menu_Diag1_0,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_2,  &menu_Diag1_3,  &menu_Diag1_1,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_3,  &menu_Diag1_4,  &menu_Diag1_2,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_4,  &menu_Diag1_5,  &menu_Diag1_3,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_5,  &menu_Diag1_6,  &menu_Diag1_4,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_6,  &menu_Diag1_7,  &menu_Diag1_5,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_7,  &menu_Diag1_8,  &menu_Diag1_6,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_8,  &menu_Diag1_9,  &menu_Diag1_7,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_9,  &menu_Diag1_10, &menu_Diag1_8,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_10, &menu_Diag1_11, &menu_Diag1_9,  &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_11, &menu_Diag1_12, &menu_Diag1_10, &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_12, &menu_Diag1_13, &menu_Diag1_11, &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_13, &menu_Diag1_14, &menu_Diag1_12, &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_14, &menu_Diag1_15, &menu_Diag1_13, &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_15, &menu_Diag1_16, &menu_Diag1_14, &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_16, &menu_Diag1_17, &menu_Diag1_15, &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_17, &menu_Diag1_18, &menu_Diag1_16, &menu_Diag0, (void*)0, (void*)0);
	 MakeMenu(&menu_Diag1_18, &menu_Diag1_0,  &menu_Diag1_17, &menu_Diag0, (void*)0, (void*)0);

//             curr                 Next                  Prev                 Parent          Child
	 MakeMenu(&menu_Mode_0,         (void*)0,             (void*)0,            (void*)0,       &menu_ModeAuto_1_0, (void*)0);
//             curr                 Next                  Prev                  Parent         Child
	 MakeMenu(&menu_ModeAuto_1_0,   &menu_ModeManual_1_1, (void*)0,             &menu_Mode_0,  (void*)0, (void*)0);
	 MakeMenu(&menu_ModeManual_1_1, &menu_ModeSpeed_1_2,  &menu_ModeAuto_1_0,   &menu_Mode_0,  &menu_ModeManual_1_1_0, (void*)0);
	 MakeMenu(&menu_ModeSpeed_1_2,  &menu_ModeSetup_1_3,  &menu_ModeManual_1_1, &menu_Mode_0,  (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetup_1_3,  (void*)0,             &menu_ModeSpeed_1_2,  &menu_Mode_0,  &menu_ModeSetup_1_3_0, (void*)0);
//             curr                   Next                    Prev                    Parent                 Child
	 MakeMenu(&menu_ModeManual_1_1_0, &menu_ModeManual_1_1_1, (void*)0,               &menu_ModeManual_1_1,  (void*)0, (void*)0);
	 MakeMenu(&menu_ModeManual_1_1_1, &menu_ModeManual_1_1_2, &menu_ModeManual_1_1_0, &menu_ModeManual_1_1,  (void*)0, (void*)0);
	 MakeMenu(&menu_ModeManual_1_1_2, &menu_ModeManual_1_1_3, &menu_ModeManual_1_1_1, &menu_ModeManual_1_1,  (void*)0, (void*)0);
	 MakeMenu(&menu_ModeManual_1_1_3, &menu_ModeManual_1_1_4, &menu_ModeManual_1_1_2, &menu_ModeManual_1_1,  (void*)0, (void*)0);
	 MakeMenu(&menu_ModeManual_1_1_4, (void*)0,               &menu_ModeManual_1_1_3, &menu_ModeManual_1_1,  (void*)0, (void*)0);

//             curr                   Next                  Prev                   Parent                Child
	 MakeMenu(&menu_ModeSetup_1_3_0, &menu_ModeSetup_1_3_1, (void*)0,              &menu_ModeSetup_1_3,  &menu_ModeSetupConf_1_3_0_0, (void*)0);
	 MakeMenu(&menu_ModeSetup_1_3_1, &menu_ModeSetup_1_3_2, &menu_ModeSetup_1_3_0, &menu_ModeSetup_1_3,  &menu_ModeSetupAStart_1_3_1_0, (void*)0);
	 MakeMenu(&menu_ModeSetup_1_3_2, &menu_ModeSetup_1_3_3, &menu_ModeSetup_1_3_1, &menu_ModeSetup_1_3,  &menu_ModeSetupLim_1_3_2_0, (void*)0);
	 MakeMenu(&menu_ModeSetup_1_3_3, &menu_ModeSetup_1_3_4, &menu_ModeSetup_1_3_2, &menu_ModeSetup_1_3,  &menu_ModeSetupReg_1_3_3_0, (void*)0);
	 MakeMenu(&menu_ModeSetup_1_3_4, (void*)0,              &menu_ModeSetup_1_3_3, &menu_ModeSetup_1_3,  &menu_ModeSetupServ_1_3_4_0, (void*)0);

//             curr                        Next                         Prev                         Parent                 Child
	 MakeMenu(&menu_ModeSetupConf_1_3_0_0, &menu_ModeSetupConf_1_3_0_1, (void*)0,                    &menu_ModeSetup_1_3_0, &menu_ModeSetupConf_1_3_0_0_0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_1, &menu_ModeSetupConf_1_3_0_2, &menu_ModeSetupConf_1_3_0_0, &menu_ModeSetup_1_3_0, &menu_ModeSetupConf_1_3_0_1_0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_2, &menu_ModeSetupConf_1_3_0_3, &menu_ModeSetupConf_1_3_0_1, &menu_ModeSetup_1_3_0, &menu_ModeSetupConf_1_3_0_2_0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_3, &menu_ModeSetupConf_1_3_0_4, &menu_ModeSetupConf_1_3_0_2, &menu_ModeSetup_1_3_0, &menu_ModeSetupConf_1_3_0_3_0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_4, (void*)0,                    &menu_ModeSetupConf_1_3_0_3, &menu_ModeSetup_1_3_0, &menu_ModeSetupConf_1_3_0_4_0, (void*)0);

//             curr                          Next                           Prev                           Parent                       Child
	 MakeMenu(&menu_ModeSetupConf_1_3_0_0_0, &menu_ModeSetupConf_1_3_0_0_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_0, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_0_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_0_0, &menu_ModeSetupConf_1_3_0_0, (void*)0, (void*)0);

//             curr                          Next                           Prev                           Parent                       Child
	 MakeMenu(&menu_ModeSetupConf_1_3_0_1_0, &menu_ModeSetupConf_1_3_0_1_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_1, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_1_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_1_0, &menu_ModeSetupConf_1_3_0_1, (void*)0, (void*)0);

//             curr                          Next                           Prev                           Parent                       Child
	 MakeMenu(&menu_ModeSetupConf_1_3_0_2_0, &menu_ModeSetupConf_1_3_0_2_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_2, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_2_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_2_0, &menu_ModeSetupConf_1_3_0_2, (void*)0, (void*)0);

//             curr                          Next                           Prev                           Parent                       Child
	 MakeMenu(&menu_ModeSetupConf_1_3_0_3_0, &menu_ModeSetupConf_1_3_0_3_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_3, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_3_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_3_0, &menu_ModeSetupConf_1_3_0_3, (void*)0, (void*)0);

//             curr                          Next                           Prev                           Parent                       Child
	 MakeMenu(&menu_ModeSetupConf_1_3_0_4_0, &menu_ModeSetupConf_1_3_0_4_1, (void*)0,                      &menu_ModeSetupConf_1_3_0_4, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_4_1, &menu_ModeSetupConf_1_3_0_4_2, &menu_ModeSetupConf_1_3_0_4_0, &menu_ModeSetupConf_1_3_0_4, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupConf_1_3_0_4_2, (void*)0,                      &menu_ModeSetupConf_1_3_0_4_1, &menu_ModeSetupConf_1_3_0_4, (void*)0, (void*)0);

//             curr                          Next                         Prev                           Parent                 Child
	 MakeMenu(&menu_ModeSetupAStart_1_3_1_0, &menu_ModeSetupAStart_1_3_1_1, (void*)0,                      &menu_ModeSetup_1_3_1, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupAStart_1_3_1_1, &menu_ModeSetupAStart_1_3_1_2, &menu_ModeSetupAStart_1_3_1_0, &menu_ModeSetup_1_3_1, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupAStart_1_3_1_2, &menu_ModeSetupAStart_1_3_1_3, &menu_ModeSetupAStart_1_3_1_1, &menu_ModeSetup_1_3_1, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupAStart_1_3_1_3, &menu_ModeSetupAStart_1_3_1_4, &menu_ModeSetupAStart_1_3_1_2, &menu_ModeSetup_1_3_1, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupAStart_1_3_1_4, (void*)0,                    &menu_ModeSetupAStart_1_3_1_3, &menu_ModeSetup_1_3_1, (void*)0, (void*)0);

//            curr                        Next                        Prev                        Parent                 Child
	 MakeMenu(&menu_ModeSetupLim_1_3_2_0, &menu_ModeSetupLim_1_3_2_1, (void*)0,                   &menu_ModeSetup_1_3_2, (void*)0, &scSetValve0Per);
	 MakeMenu(&menu_ModeSetupLim_1_3_2_1, &menu_ModeSetupLim_1_3_2_2, &menu_ModeSetupLim_1_3_2_0, &menu_ModeSetup_1_3_2, (void*)0, &scSetValve100Per);
	 MakeMenu(&menu_ModeSetupLim_1_3_2_2, &menu_ModeSetupLim_1_3_2_3, &menu_ModeSetupLim_1_3_2_1, &menu_ModeSetup_1_3_2, (void*)0, &scSetLimit0Per);
	 MakeMenu(&menu_ModeSetupLim_1_3_2_3, &menu_ModeSetupLim_1_3_2_4, &menu_ModeSetupLim_1_3_2_2, &menu_ModeSetup_1_3_2, (void*)0, &scSetLimit100Per);
	 MakeMenu(&menu_ModeSetupLim_1_3_2_4, &menu_ModeSetupLim_1_3_2_5, &menu_ModeSetupLim_1_3_2_3, &menu_ModeSetup_1_3_2, (void*)0, &scSetCut0Per);
	 MakeMenu(&menu_ModeSetupLim_1_3_2_5, (void*)0,                   &menu_ModeSetupLim_1_3_2_4, &menu_ModeSetup_1_3_2, (void*)0, &scSetCut100Per);

//            curr                        Next                        Prev                        Parent                 Child
	 MakeMenu(&menu_ModeSetupReg_1_3_3_0, &menu_ModeSetupReg_1_3_3_1, (void*)0,                   &menu_ModeSetup_1_3_3, (void*)0, &scSetPinc);
	 MakeMenu(&menu_ModeSetupReg_1_3_3_1, &menu_ModeSetupReg_1_3_3_2, &menu_ModeSetupReg_1_3_3_0, &menu_ModeSetup_1_3_3, (void*)0, &scSetPdec);
	 MakeMenu(&menu_ModeSetupReg_1_3_3_2, &menu_ModeSetupReg_1_3_3_3, &menu_ModeSetupReg_1_3_3_1, &menu_ModeSetup_1_3_3, (void*)0, &scSetIinc);
	 MakeMenu(&menu_ModeSetupReg_1_3_3_3, &menu_ModeSetupReg_1_3_3_4, &menu_ModeSetupReg_1_3_3_2, &menu_ModeSetup_1_3_3, (void*)0, &scSetIdec);
	 MakeMenu(&menu_ModeSetupReg_1_3_3_4, &menu_ModeSetupReg_1_3_3_5, &menu_ModeSetupReg_1_3_3_3, &menu_ModeSetup_1_3_3, (void*)0, &scSetDinc);
	 MakeMenu(&menu_ModeSetupReg_1_3_3_5, &menu_ModeSetupReg_1_3_3_6, &menu_ModeSetupReg_1_3_3_4, &menu_ModeSetup_1_3_3, (void*)0, &scSetDdec);
	 MakeMenu(&menu_ModeSetupReg_1_3_3_6, &menu_ModeSetupReg_1_3_3_7, &menu_ModeSetupReg_1_3_3_5, &menu_ModeSetup_1_3_3, (void*)0, &scSetDeadZoneDown);
	 MakeMenu(&menu_ModeSetupReg_1_3_3_7, (void*)0,                   &menu_ModeSetupReg_1_3_3_6, &menu_ModeSetup_1_3_3, (void*)0, &scSetDeadZoneUp);

//            curr                         Next                         Prev                         Parent                 Child
	 MakeMenu(&menu_ModeSetupServ_1_3_4_0, &menu_ModeSetupServ_1_3_4_1, (void*)0,                    &menu_ModeSetup_1_3_4, &menu_ModeSetupServ_1_3_4_0_0, (void*)0);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_1, &menu_ModeSetupServ_1_3_4_2, &menu_ModeSetupServ_1_3_4_0, &menu_ModeSetup_1_3_4, &menu_ModeSetupServ_1_3_4_1_0, (void*)0);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_2, &menu_ModeSetupServ_1_3_4_3, &menu_ModeSetupServ_1_3_4_1, &menu_ModeSetup_1_3_4, &menu_ModeSetupServ_1_3_4_2_0, (void*)0);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_3, &menu_ModeSetupServ_1_3_4_4, &menu_ModeSetupServ_1_3_4_2, &menu_ModeSetup_1_3_4, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_4, (void*)0,                    &menu_ModeSetupServ_1_3_4_3, &menu_ModeSetup_1_3_4, (void*)0, (void*)0);

//            curr                           Next                           Prev                           Parent                       Child
	 MakeMenu(&menu_ModeSetupServ_1_3_4_0_0, &menu_ModeSetupServ_1_3_4_0_1, (void*)0,                      &menu_ModeSetupServ_1_3_4_0, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_0_1, &menu_ModeSetupServ_1_3_4_0_2, &menu_ModeSetupServ_1_3_4_0_0, &menu_ModeSetupServ_1_3_4_0, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_0_2, (void*)0,                      &menu_ModeSetupServ_1_3_4_0_1, &menu_ModeSetupServ_1_3_4_0, (void*)0, (void*)0);

//            curr                           Next                           Prev                           Parent                       Child
	 MakeMenu(&menu_ModeSetupServ_1_3_4_1_0, &menu_ModeSetupServ_1_3_4_1_1, (void*)0,                      &menu_ModeSetupServ_1_3_4_1, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_1_1, (void*)0,                      &menu_ModeSetupServ_1_3_4_1_0, &menu_ModeSetupServ_1_3_4_1, (void*)0, (void*)0);

//            curr                           Next                           Prev                           Parent                       Child
	 MakeMenu(&menu_ModeSetupServ_1_3_4_2_0, &menu_ModeSetupServ_1_3_4_2_1, (void*)0,                      &menu_ModeSetupServ_1_3_4_2, (void*)0, &scSetInput4mA);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_2_1, &menu_ModeSetupServ_1_3_4_2_2, &menu_ModeSetupServ_1_3_4_2_0, &menu_ModeSetupServ_1_3_4_2, (void*)0, &scSetInput20mA);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_2_2, &menu_ModeSetupServ_1_3_4_2_3, &menu_ModeSetupServ_1_3_4_2_1, &menu_ModeSetupServ_1_3_4_2, (void*)0, &scSetOutput4mA);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_2_3, &menu_ModeSetupServ_1_3_4_2_4, &menu_ModeSetupServ_1_3_4_2_2, &menu_ModeSetupServ_1_3_4_2, (void*)0, &scSetOutput20mA);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_2_4, &menu_ModeSetupServ_1_3_4_2_5, &menu_ModeSetupServ_1_3_4_2_3, &menu_ModeSetupServ_1_3_4_2, (void*)0, (void*)0);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_2_5, &menu_ModeSetupServ_1_3_4_2_6, &menu_ModeSetupServ_1_3_4_2_4, &menu_ModeSetupServ_1_3_4_2, (void*)0, &scSetAngle45DegPlus);
	 MakeMenu(&menu_ModeSetupServ_1_3_4_2_6, (void*)0,                      &menu_ModeSetupServ_1_3_4_2_5, &menu_ModeSetupServ_1_3_4_2, (void*)0, &scSetAngle45DegMinus);


 menu_Diag1_0.Param = &dsData.settingPer;
 menu_Diag1_1.Param = &dsData.settingCur;
 menu_Diag1_2.Param = &dsData.positionPer;
 menu_Diag1_3.Param = &dsData.positionCur;   // положение в мА
 menu_Diag1_4.Param = &dsData.errorPer;      // рассоглосование
 menu_Diag1_5.Param = &dsData.curPosStockDeg; // положение штока в град
 menu_Diag1_6.Param = &dsData.inPressure;    // входное давление
 menu_Diag1_7.Param = &dsData.outPressure1; // исх давл1
 menu_Diag1_8.Param = &dsData.outPressure2; // исх давл2
 menu_Diag1_9.Param = &dsData.topLimitDeg;  //верхнее ограничение в град
 menu_Diag1_10.Param = &dsData.botLimitDeg;  //нижнее ограничение в град
 menu_Diag1_11.Param = &dsData.temperature;  //температура
 menu_Diag1_12.servData = &dsData.workingTime;
 menu_Diag1_13.servData = &dsData.cycles;
 menu_Diag1_15.servData = &dsData.idNumber;


     SetMenu();
	 tmpScreen = &scSetInput4mA;
	 menu_item = VoidToMenu(&menu_ModeAuto_1_0);
	 dsData.curScreen =  SCREEN_MAIN_DATA;
	 paramScreen_test = 12.586;
	 dsData.codeErorr=0;

	 dsData.codeWarning=0;
	test_screen.current_value = *test_screen.value_addr;
}

void MenuSelectItemUpdate()
{
	 switch(menu_item->typeOfData)
	 {
		 case MENU_SELECT_TYPE_AUTO:  		dsData.modeCtrl = MODE_CTRL_AUTO;			break;
		 case MENU_SELECT_TYPE_MAN1:  		dsData.modeCtrl = MODE_CTRL_MANUAL1;		break;
		 case MENU_SELECT_TYPE_MAN5:  		dsData.modeCtrl = MODE_CTRL_MANUAL5;		break;
		 case MENU_SELECT_TYPE_MAN10: 		dsData.modeCtrl = MODE_CTRL_MANUAL10;		break;
		 case MENU_SELECT_TYPE_MAN25: 		dsData.modeCtrl = MODE_CTRL_MANUAL25;		break;
		 case MENU_SELECT_TYPE_DIAG:  		dsData.modeCtrl = MODE_CTRL_DIAGNOST;		break;
		 case MENU_SELECT_TYPE_ROTAT_FORV: 	dsData.rotationMode = MODE_ROTATION_RIGHT;		break;
		 case MENU_SELECT_TYPE_ROTAT_BACK: 	dsData.rotationMode = MODE_ROTATION_LEFT;		 break;
		 case MENU_SELECT_TYPE_DRV_ROT: 	dsData.driverMode = MODE_DRIVER_ROTATE;	break;
		 case MENU_SELECT_TYPE_DRV_LINE: 	dsData.driverMode = MODE_DRIVER_LINE;	break;
		 case MENU_SELECT_TYPE_POS_FORV: 	dsData.directionPosMode = MODE_DIRECTION_FORWARD;	break;
		 case MENU_SELECT_TYPE_POS_BACK: 	dsData.directionPosMode = MODE_DIRECTION_REVERSE;	break;
		 case MENU_SELECT_TYPE_FEEDBACK_FORV: dsData.feedbackMode = MODE_FEEDBACK_FORWARD;		break;
		 case MENU_SELECT_TYPE_FEEDBACK_BACK: dsData.feedbackMode = MODE_FEEDBACK_REVERSE;		break;
		 case MENU_SELECT_TYPE_CHAR_LINE: 	 dsData.charachMode = MODE_CHARACTER_LINE;	break;
		 case MENU_SELECT_TYPE_CHAR_PERC: 	 dsData.charachMode = MODE_CHARACTER_PERCENT;	break;
		 case MENU_SELECT_TYPE_CHAR_USER: 	 dsData.charachMode = MODE_CHARACTER_USER;	break;
		 case MENU_SELECT_TYPE_LANG_RU: 	 dsData.lang = MODE_LANG_RUS;	break;
		 case MENU_SELECT_TYPE_LANG_EN: 	 dsData.lang = MODE_LANG_ENG;	break;
		 case MENU_SELECT_TYPE_LANG_CH: 	 dsData.lang = MODE_LANG_CHI;	break;
		 case MENU_SELECT_TYPE_DISP_NORM: 	 dsData.displayMode = MODE_DISPLAY_NORMAL;	break;
		 case MENU_SELECT_TYPE_DISP_REV: 	 dsData.displayMode = MODE_DISPLAY_REVERSE;	break;
	 }
	// dsData.command = INTERFACE_COMMAND_SAVE;
}

void ButtonsControlMenu(void)
{
	if(dsData.pushedButton==BUTTON_BACK)
	 {
		dsData.pushedButton=BUTTON_NO;
		if(VoidToMenu(menu_item->Parent)!=NULL)
		menu_item = VoidToMenu(menu_item->Parent);
		if(VoidToMenu(menu_item->Parent)==NULL)
        dsData.curScreen =  SCREEN_MAIN_DATA;
	 }
	 if(dsData.pushedButton==BUTTON_DOWN)
	 {
		dsData.pushedButton=BUTTON_NO;
		if(VoidToMenu(menu_item->Next)!=NULL)
		menu_item = VoidToMenu(menu_item->Next);
	 }
	 if(dsData.pushedButton==BUTTON_UP)
	 {
		dsData.pushedButton=BUTTON_NO;
		if(VoidToMenu(menu_item->Previous)!=NULL)
		menu_item = VoidToMenu(menu_item->Previous);
	 }
	 if(dsData.pushedButton==BUTTON_ENTER)
	 {
		dsData.pushedButton=BUTTON_NO;
		if(VoidToMenu(menu_item->Child)!=NULL)
		menu_item = VoidToMenu(menu_item->Child);
		else {
		ErrorListData();
				if(menu_item->NextScreen!=NULL) {
					if(menu_item->typeOfData==TYPE_ERRORS)   //если тип данных меню ошибок
					{                                        //то открыть экран ошибок
						dsData.curScreen =  SCREEN_ERRORS;

						tmpErr = VoidToErrList(menu_item->NextScreen);
					}
					else
					{                           //иначе открываем установку параметров
					tmpScreen = VoidToScreen(menu_item->NextScreen);
					dsData.curScreen =  SCREEN_SET_PPARAM;}

					tmpScreen->current_value = *tmpScreen->value_addr;
					tmpScreen->index = 0;

					}
					else {
					if ((menu_item->command>=1)&&(menu_item->command<250)) {
					dsData.curScreen =  SCREEN_PROGRESS;
					dsData.command = menu_item->command;
					}


					 }
					 if((menu_item->saveCommand<=SAVE_COMMAND_DIAG)&&(menu_item->saveCommand>=SAVE_COMMAND_AUTO))
					 {
						dsData.curScreen =  SCREEN_ACCEPT;
								 /* MenuSelectItemUpdate();
									 SetMenu();   */
					 }

		}
	 }
}



void ButtonsSetParam(screenItem *Scr)
{
	float tmp_value;
	if(dsData.pushedButton==BUTTON_BACK)
     {
        dsData.pushedButton=BUTTON_NO;
		dsData.curScreen =  SCREEN_MAIN_MENU;
     }
	 if(dsData.pushedButton==BUTTON_DOWN)
     {
		dsData.pushedButton=BUTTON_NO;
		if(Scr->index==0)
		Scr->current_value = Scr->current_value*(-1.0);
		if((Scr->index>0)&&(Scr->index<=Scr->digits))
		{
			tmp_value  =  my_pow(10,Scr->digits-Scr->index);
		   Scr->current_value -= tmp_value;
        }

		if((Scr->index>Scr->digits+1)&&(Scr->index<=Scr->digits+Scr->fractional+1))
		{
		   tmp_value  =  1.0/my_pow(10,Scr->index-(Scr->digits+1));
		   Scr->current_value -=  tmp_value;
		}
           if(Scr->current_value<=(-1.0*my_pow(10,Scr->digits)+0.0005))
		   Scr->current_value +=  tmp_value;

     }
	 if(dsData.pushedButton==BUTTON_UP)
     {
		dsData.pushedButton=BUTTON_NO;

		if(Scr->index==0)
		Scr->current_value = Scr->current_value*(-1.0);
		if((Scr->index>0)&&(Scr->index<=Scr->digits))
		{
			tmp_value = my_pow(10,Scr->digits-Scr->index);
		   Scr->current_value += tmp_value;
		}

		if((Scr->index>(Scr->digits+1))&&(Scr->index<=Scr->digits+Scr->fractional+1))
		{
		tmp_value= 1.0/my_pow(10,Scr->index-(Scr->digits+1));
		   Scr->current_value +=  tmp_value;
		}
		   if(Scr->current_value>=my_pow(10,Scr->digits)-0.0005)
		   Scr->current_value -=  tmp_value;

		if(Scr->index>(Scr->digits+Scr->fractional+1)) {

		acceptScreen.ScrSource = Scr;
		acceptScreen.index=0;


		dsData.curScreen =  SCREEN_ACCEPT;

		}
     }
     if(dsData.pushedButton==BUTTON_ENTER)
     {
		dsData.pushedButton=BUTTON_NO;

		Scr->index++;

		if(Scr->index == Scr->digits+1)
        Scr->index++;
     }
}


void ControlMenuUpdate()
{
    uint8_t pix_i;
   LCD_buffer_clear();

   LCD_DrawString(1, 35, menu_item->textSize, 0, menu_item->Text,LCD_All_Bolt,INVERSE);
   if(menu_item->Select){ LCD_DrawString(111, 35, 3, 0, "[*]",LCD_All_Bolt,INVERSE);      }
   if(menu_item->typeOfData==TYPE_VALUABLE_3_1) { LCD_DrawUFloat(87,35,0,20,*menu_item->Param,3,1,LCD_All_Bolt);   }
   if(menu_item->typeOfData==TYPE_VALUABLE_2_2) { LCD_DrawUFloat(87,35,0,20,*menu_item->Param,2,2,LCD_All_Bolt);   }
   if(menu_item->typeOfData==TYPE_VALUABLE_INT) { LCD_DrawUInt(84, 35, 0, *menu_item->servData, 6, LCD_All_Bolt);   }
   if(menu_item->typeOfData==TYPE_PREV_TO) {
   LCD_DrawUInt(70, 35, 0, dsData.lastService.day, 2, LCD_All_Bolt);
   LCD_DrawString(85, 35, 1, 0, ":",LCD_All_Bolt,NO_INVERSE);
   LCD_DrawUInt(90, 35, 0, dsData.lastService.month, 2, LCD_All_Bolt);
   LCD_DrawString(105, 35, 1, 0, ":",LCD_All_Bolt,NO_INVERSE);
   LCD_DrawUInt(110, 35, 0, dsData.lastService.year, 2, LCD_All_Bolt);
   }
   if(menu_item->typeOfData==TYPE_ERRORS) {
   if(dsData.codeErorr>0)
   LCD_DrawString(87, 35, 4, 0, "есть",LCD_All_Bolt,INVERSE);
   else
   LCD_DrawString(87, 35, 3, 0, "нет",LCD_All_Bolt,INVERSE);
   }


   if(menu_item->typeOfData==TYPE_PREV_TO) {
   LCD_DrawUInt(70, 35, 0, dsData.lastService.day, 2, LCD_All_Bolt);
   LCD_DrawString(85, 35, 1, 0, ":",LCD_All_Bolt,NO_INVERSE);
   LCD_DrawUInt(90, 35, 0, dsData.lastService.month, 2, LCD_All_Bolt);
   LCD_DrawString(105, 35, 1, 0, ":",LCD_All_Bolt,NO_INVERSE);
   LCD_DrawUInt(110, 35, 0, dsData.lastService.year, 2, LCD_All_Bolt);
   }

	if(menu_item->typeOfData==TYPE_NEXT_TO) {
   LCD_DrawUInt(70, 35, 0, dsData.nextService.day, 2, LCD_All_Bolt);
   LCD_DrawString(85, 35, 1, 0, ":",LCD_All_Bolt,NO_INVERSE);
   LCD_DrawUInt(90, 35, 0, dsData.nextService.month, 2, LCD_All_Bolt);
   LCD_DrawString(105, 35, 1, 0, ":",LCD_All_Bolt,NO_INVERSE);
   LCD_DrawUInt(110, 35, 0, dsData.nextService.year, 2, LCD_All_Bolt);
   }


   LCD_Plot_Horisontal_Line (0,127,16,0);
   LCD_Plot_Horisontal_Line (0,127,17,0);
   LCD_Plot_Horisontal_Line (0,127,18,0);
   if(VoidToMenu(menu_item->Next)!=NULL)
   {
   LCD_DrawString(1, 50, VoidToMenu(menu_item->Next)->textSize, 0, VoidToMenu(menu_item->Next)->Text,ABB_Font,NO_INVERSE);
   if(VoidToMenu(menu_item->Next)->Select){ LCD_DrawString(111, 50, 3, 0, "[*]",ABB_Font,NO_INVERSE);      }

   if(VoidToMenu(menu_item->Next)->typeOfData==TYPE_VALUABLE_3_1) { LCD_DrawUFloat(87,50,0,20,*VoidToMenu(menu_item->Next)->Param,3,1,ABB_Font);   }
   if(VoidToMenu(menu_item->Next)->typeOfData==TYPE_VALUABLE_2_2) { LCD_DrawUFloat(87,50,0,20,*VoidToMenu(menu_item->Next)->Param,2,2,ABB_Font);   }
   if(VoidToMenu(menu_item->Next)->typeOfData==TYPE_VALUABLE_INT) { LCD_DrawUInt(84, 50, 0, *VoidToMenu(menu_item->Next)->servData, 6, ABB_Font);   }
   if(VoidToMenu(menu_item->Next)->typeOfData==TYPE_PREV_TO) {
   LCD_DrawUInt(70, 50, 0, dsData.lastService.day, 2, ABB_Font);
   LCD_DrawString(85, 50, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(90, 50, 0, dsData.lastService.month, 2, ABB_Font);
   LCD_DrawString(105, 50, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(110, 50, 0, dsData.lastService.year, 2, ABB_Font);
   }
   if(VoidToMenu(menu_item->Next)->typeOfData==TYPE_ERRORS) {
   if(dsData.codeErorr>0)
   LCD_DrawString(87, 50, 4, 0, "есть",ABB_Font,NO_INVERSE);
   else
   LCD_DrawString(87, 50, 3, 0, "нет",ABB_Font,NO_INVERSE);
   }

   if(VoidToMenu(menu_item->Next)->typeOfData==TYPE_PREV_TO) {
   LCD_DrawUInt(70, 50, 0, dsData.lastService.day, 2, ABB_Font);
   LCD_DrawString(85, 50, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(90, 50, 0, dsData.lastService.month, 2, ABB_Font);
   LCD_DrawString(105, 50, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(110, 50, 0, dsData.lastService.year, 2, ABB_Font);
   }

	if(VoidToMenu(menu_item->Next)->typeOfData==TYPE_NEXT_TO) {
   LCD_DrawUInt(70, 50, 0, dsData.nextService.day, 2, ABB_Font);
   LCD_DrawString(85, 50, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(90, 50, 0, dsData.nextService.month, 2, ABB_Font);
   LCD_DrawString(105, 50, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(110, 50, 0, dsData.nextService.year, 2, ABB_Font);
   }







   }
   if(VoidToMenu(menu_item->Previous)!=NULL)
   {
   LCD_DrawString(1, 23, VoidToMenu(menu_item->Previous)->textSize, 0, VoidToMenu(menu_item->Previous)->Text,ABB_Font,NO_INVERSE);
   if(VoidToMenu(menu_item->Previous)->Select){ LCD_DrawString(111, 23, 3, 0, "[*]",ABB_Font,NO_INVERSE);      }

   if(VoidToMenu(menu_item->Previous)->typeOfData==TYPE_VALUABLE_3_1) { LCD_DrawUFloat(87,23,0,20,*VoidToMenu(menu_item->Previous)->Param,3,1,ABB_Font);   }
   if(VoidToMenu(menu_item->Previous)->typeOfData==TYPE_VALUABLE_2_2) { LCD_DrawUFloat(87,23,0,20,*VoidToMenu(menu_item->Previous)->Param,2,2,ABB_Font);   }
   if(VoidToMenu(menu_item->Previous)->typeOfData==TYPE_VALUABLE_INT) { LCD_DrawUInt(84, 23, 0, *VoidToMenu(menu_item->Previous)->servData, 6, ABB_Font);   }
   if(VoidToMenu(menu_item->Previous)->typeOfData==TYPE_PREV_TO) {
   LCD_DrawUInt(70, 23, 0, dsData.lastService.day, 2, ABB_Font);
   LCD_DrawString(85, 23, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(90, 23, 0, dsData.lastService.month, 2, ABB_Font);
   LCD_DrawString(105, 23, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(110, 23, 0, dsData.lastService.year, 2, ABB_Font);
   }
   if(VoidToMenu(menu_item->Previous)->typeOfData==TYPE_ERRORS) {
   if(dsData.codeErorr>0)
   LCD_DrawString(87, 23, 4, 0, "есть",ABB_Font,NO_INVERSE);
   else
   LCD_DrawString(87, 23, 3, 0, "нет",ABB_Font,NO_INVERSE);
   }
   if(VoidToMenu(menu_item->Previous)->typeOfData==TYPE_PREV_TO) {
   LCD_DrawUInt(70, 23, 0, dsData.lastService.day, 2, ABB_Font);
   LCD_DrawString(85, 23, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(90, 23, 0, dsData.lastService.month, 2, ABB_Font);
   LCD_DrawString(105, 23, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(110, 23, 0, dsData.lastService.year, 2, ABB_Font);
   }

	if(VoidToMenu(menu_item->Previous)->typeOfData==TYPE_NEXT_TO) {
   LCD_DrawUInt(70, 23, 0, dsData.nextService.day, 2, ABB_Font);
   LCD_DrawString(85, 23, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(90, 23, 0, dsData.nextService.month, 2, ABB_Font);
   LCD_DrawString(105, 23, 1, 0, ":",ABB_Font,NO_INVERSE);
   LCD_DrawUInt(110, 23, 0, dsData.nextService.year, 2, ABB_Font);
   }

   }
   if(VoidToMenu(menu_item->Parent)!=NULL)
   {
   LCD_DrawString(1, 0, VoidToMenu(menu_item->Parent)->textSize, 0,  VoidToMenu(menu_item->Parent)->Text,LCD_All_Bolt,NO_INVERSE);

   }
}

void SetParamUpdate(screenItem *Scr)
{    uint8_t pix_i;
	 LCD_buffer_clear();

	 LCD_Plot_Horisontal_Line (0,127,16,0);
   LCD_Plot_Horisontal_Line (0,127,17,0);
   LCD_Plot_Horisontal_Line (0,127,18,0);



   if(VoidToMenu(Scr->Previous)!=NULL)
   {
   LCD_DrawString(1, 0, VoidToMenu(Scr->Previous)->textSize, 0,  VoidToMenu(Scr->Previous)->Text,LCD_All_Bolt,NO_INVERSE);
   }
	 LCD_DrawUFloat(42,20,1,20,*Scr->value_addr,Scr->digits,Scr->fractional,ABB_Font);
	 LCD_DrawString(102, 20, 4, 0,  Scr->Text,ABB_Font,NO_INVERSE);
	 LCD_DrawString(2, 20, 6, 0,  "Текущ:",ABB_Font,NO_INVERSE);

	 LCD_DrawUFloat(10,40,1,Scr->index,Scr->current_value,Scr->digits,Scr->fractional,LCD_All_Bolt);
	 if(Scr->index>Scr->digits+ Scr->fractional+1)
	 LCD_DrawString(100, 40, 3, 0,  "ОК?",LCD_All_Bolt,INVERSE);
    else  LCD_DrawString(100, 40, 3, 0,  "ОК?",LCD_All_Bolt,NO_INVERSE);
	 if(Scr->index>Scr->digits+ Scr->fractional+2)  Scr->index=0;


}


void MainScreenUpdate()
{
	LCD_buffer_clear();
	if(dsData.modeCtrl!=MODE_CTRL_DIAGNOST)
	{
	LCD_DrawString(2, 2, 2, 0,  "Р:",LCD_All_Bolt,NO_INVERSE);
	switch (dsData.modeCtrl) {
		case MODE_CTRL_AUTO: LCD_DrawString(16, 2, 1, 0,  "A",LCD_All_Bolt,INVERSE);break;
		case MODE_CTRL_MANUAL1: LCD_DrawString(16, 2, 3, 0,  "P1%",LCD_All_Bolt,INVERSE);break;
		case MODE_CTRL_MANUAL5: LCD_DrawString(16, 2, 3, 0,  "P5%",LCD_All_Bolt,INVERSE);break;
		case MODE_CTRL_MANUAL10: LCD_DrawString(16, 2, 4, 0,  "P10%",LCD_All_Bolt,INVERSE);break;
		case MODE_CTRL_MANUAL25: LCD_DrawString(16, 2, 4, 0,  "P25%",LCD_All_Bolt,INVERSE);break;
    }


	//LCD_DrawString(60, 2, 9, 0,  "Положение",ABB_Font,NO_INVERSE);
	LCD_DrawUFloat(56,2,1,20,dsData.positionPer,3,2,LCD_All_Bolt);
   //	LCD_DrawString(60,15, 3, 0,  "   ",LCD_All_Bolt,NO_INVERSE);

	LCD_DrawChar(110, 3, '%',ABB_Font, NO_INVERSE);

	LCD_DrawString(2, 20, 5, 0,  "Зад.:",ABB_Font,NO_INVERSE);
	LCD_DrawUFloat(33,20,1,20,dsData.settingPer,3,2,ABB_Font);
	//LCD_DrawString(30,45, 3, 0,  "   ",LCD_All_Bolt,NO_INVERSE);
	LCD_DrawChar(90, 20, '%',ABB_Font, NO_INVERSE);

	LCD_DrawString(2, 32, 4, 0,  "Ток:",ABB_Font,NO_INVERSE);
	LCD_DrawUFloat(33,32,1,20,dsData.settingCur,3,2,ABB_Font);
	LCD_DrawString(90, 32, 2, 0,  "мА",ABB_Font,NO_INVERSE);
	if(dsData.codeErorr>0) LCD_DrawString(25, 48, 11, 0,  "Есть ошибки",LCD_All_Bolt,NO_INVERSE);
	else if(dsData.codeWarning>0) LCD_DrawString(3, 48, 16, 0,  "Есть предупрежд.",LCD_All_Bolt,NO_INVERSE);
	else
	LCD_DrawString(25, 48, 10, 0,  "Ошибок нет",LCD_All_Bolt,NO_INVERSE);
	}
	else
	LCD_DrawString(2, 2, 17, 0,  "Режим диагностики",ABB_Font,NO_INVERSE);
}

void ButtonMainScreen()
{
		if(dsData.pushedButton==BUTTON_BACK)
	 {
	   dsData.pushedButton=BUTTON_NO;
	   dsData.curScreen =  SCREEN_MAIN_MENU;
	   menu_item = VoidToMenu(&menu_Diag1_0);
	 }
	 if(dsData.pushedButton==BUTTON_DOWN)
	 {
		dsData.pushedButton=BUTTON_NO;
		if(dsData.modeCtrl == MODE_CTRL_MANUAL1)
		  dsData.settingPer-=1.0;
		if(dsData.modeCtrl == MODE_CTRL_MANUAL5)
		  dsData.settingPer-=5.0;
	   if(dsData.modeCtrl == MODE_CTRL_MANUAL10)
		  dsData.settingPer-=10.0;
	   if(dsData.modeCtrl == MODE_CTRL_MANUAL25)
		  dsData.settingPer-=25.0;
	  if((dsData.settingPer<0.0)&&(dsData.modeCtrl != MODE_CTRL_AUTO)) dsData.settingPer = 100.0;

	 }
	 if(dsData.pushedButton==BUTTON_UP)
	 {
		dsData.pushedButton=BUTTON_NO;
		if(dsData.modeCtrl == MODE_CTRL_MANUAL1)
		  dsData.settingPer+=1.0;
		if(dsData.modeCtrl == MODE_CTRL_MANUAL5)
		  dsData.settingPer+=5.0;
	   if(dsData.modeCtrl == MODE_CTRL_MANUAL10)
		  dsData.settingPer+=10.0;
	   if(dsData.modeCtrl == MODE_CTRL_MANUAL25)
		  dsData.settingPer+=25.0;
       if((dsData.settingPer>100.0)&&(dsData.modeCtrl != MODE_CTRL_AUTO)) dsData.settingPer = 0.0;
	 }
	 if(dsData.pushedButton==BUTTON_ENTER)
	 {
		dsData.pushedButton=BUTTON_NO;
		dsData.curScreen =  SCREEN_MAIN_MENU;
		menu_item = VoidToMenu(&menu_ModeAuto_1_0);
	 }
}

void ProgressUpdate(void)
{
uint8_t i;
	LCD_buffer_clear();
	LCD_DrawString(2, 2, menu_item->textSize, 0,  menu_item->Text,LCD_All_Bolt,INVERSE);
	LCD_Plot_Horisontal_Line (0,127,30,0);
	LCD_Plot_Vertical_Line (0,31,49,0);

	LCD_Plot_Horisontal_Line (0,127,50,0);
	LCD_Plot_Vertical_Line (127,31,49,0);
	if((*dsData.progress>=100)&&(*dsData.progress<150))
	LCD_DrawString(28, 33, 9, 0,  "Выполнено",LCD_All_Bolt,NO_INVERSE);

	if(*dsData.progress<100)
	for (i = 0; i < (uint8_t)((*dsData.progress)*1.28); i++) {
	LCD_Plot_Vertical_Line (i,31,49,0);
	}
	if(*dsData.progress>150)
	LCD_DrawString(35, 33, 6, 0,  "ОШИБКА",LCD_All_Bolt,NO_INVERSE);
}

void ButtonProgressUpdate(void)
{
     		if(dsData.pushedButton==BUTTON_BACK)
	 {
	   dsData.pushedButton = BUTTON_NO;
	   if(*dsData.progress<100){
       dsData.command = INTERFACE_COMMAND_ABORT;
	   dsData.curScreen =  SCREEN_MAIN_MENU;   }
	   if((*dsData.progress>=100)&&(*dsData.progress<150))
		dsData.curScreen =  SCREEN_ACCEPT;
        if(*dsData.progress>=150)
        dsData.curScreen =  SCREEN_MAIN_MENU;
	 }
	 if(dsData.pushedButton==BUTTON_DOWN)
	 {
		dsData.pushedButton=BUTTON_NO;
	   if((*dsData.progress>=100)&&(*dsData.progress<150))
		dsData.curScreen =  SCREEN_ACCEPT;

	 }
	 if(dsData.pushedButton==BUTTON_UP)
	 {
		dsData.pushedButton=BUTTON_NO;
		if((*dsData.progress>=100)&&(*dsData.progress<150))
		dsData.curScreen =  SCREEN_ACCEPT;
	 }
	 if(dsData.pushedButton==BUTTON_ENTER)
	 {
		dsData.pushedButton = BUTTON_NO;
		if((*dsData.progress>=100)&&(*dsData.progress<150))
		dsData.curScreen =  SCREEN_ACCEPT;

	 }
}

void ErrorListUpdate(void)
{
uint8_t i;
uint16_t index;
index = 0;
	LCD_buffer_clear();
	LCD_DrawString(2, 2, 7, 0,  "Ошибки:",LCD_All_Bolt,NO_INVERSE);
   LCD_Plot_Horisontal_Line (0,127,16,0);
   LCD_Plot_Horisontal_Line (0,127,17,0);
   LCD_Plot_Horisontal_Line (0,127,18,0);
		for (i = 0; i < NUMBER_OF_ERRORS; i++)
		{

			if(((dsData.codeErorr>>i)&0x01)==0x01)
			{
			index++;
			}
			}



   if(index==0) LCD_DrawString(65, 2, 6, 0,  "0 из 0",LCD_All_Bolt,NO_INVERSE);
   if(index>0) {
   LCD_DrawUInt(63, 2, 0, tmpErr->index, 3, LCD_All_Bolt);
   LCD_DrawString(87, 2, 2, 0,  "из",LCD_All_Bolt,NO_INVERSE);
   LCD_DrawUInt(104, 2, 0, index, 3, LCD_All_Bolt);

   LCD_DrawString(2, 22, tmpErr->lengh1, 0,  tmpErr->Text1,ABB_Font,NO_INVERSE);
   LCD_DrawString(2, 36, tmpErr->lengh2, 0,  tmpErr->Text2,ABB_Font,NO_INVERSE);
   LCD_DrawString(2, 50, tmpErr->lengh3, 0,  tmpErr->Text3,ABB_Font,NO_INVERSE);


   }

}

 void ButtonErrorUpdate(void)
{
     		if(dsData.pushedButton==BUTTON_BACK)
	 {
		  dsData.pushedButton=BUTTON_NO;
		  dsData.curScreen =  SCREEN_MAIN_MENU;

	 }
	 if(dsData.pushedButton==BUTTON_DOWN)
	 {
		dsData.pushedButton=BUTTON_NO;
		 if(tmpErr->Next!=NULL) tmpErr = VoidToErrList(tmpErr->Next);

	 }
	 if(dsData.pushedButton==BUTTON_UP)
	 {
		dsData.pushedButton=BUTTON_NO;
		if(tmpErr->Previous!=NULL) tmpErr = VoidToErrList(tmpErr->Previous);
	 }
	 if(dsData.pushedButton==BUTTON_ENTER)
	 {
	 	dsData.pushedButton=BUTTON_NO;
		dsData.curScreen =  SCREEN_MAIN_MENU;

	 }
}

 void ButtonAcceptionUpdate(void)
{
     		if(dsData.pushedButton==BUTTON_BACK)
	 {
		  dsData.pushedButton=BUTTON_NO;
		  dsData.curScreen =  SCREEN_MAIN_MENU;

	 }
	 if(dsData.pushedButton==BUTTON_DOWN)
	 {
		dsData.pushedButton=BUTTON_NO;


	 }
	 if(dsData.pushedButton==BUTTON_UP)
	 {
		dsData.pushedButton=BUTTON_NO;
		if(acceptScreen.index==0)
		{
		  dsData.command = menu_item->saveCommand;
		 dsData.saveOrAccept = 0;

		  if((menu_item->saveCommand<=SAVE_COMMAND_DIAG)&&(menu_item->saveCommand>=SAVE_COMMAND_AUTO))
					 {
								  MenuSelectItemUpdate();
									 SetMenu();
					 }
					 else
					  if(menu_item->saveCommand<=SAVE_COMMAND_DEAFULT_SETTINGS)
					  {
                          ;
                      }
					  else
					 {
					 if(acceptScreen.ScrSource->value_addr!=NULL)
					  *acceptScreen.ScrSource->value_addr = acceptScreen.ScrSource->current_value;
					 }
		}
		else
		{
		   dsData.command = menu_item->saveCommand;
		   dsData.saveOrAccept = 1;

			if((menu_item->saveCommand<=SAVE_COMMAND_DIAG)&&(menu_item->saveCommand>=SAVE_COMMAND_AUTO))
					 {
								  MenuSelectItemUpdate();
									 SetMenu();
					 }
					 else
					 if(menu_item->saveCommand<=SAVE_COMMAND_DEAFULT_SETTINGS)
					  {
                          ;
                      }
					  else
					 {
					 if(acceptScreen.ScrSource->value_addr!=NULL)
						*acceptScreen.ScrSource->value_addr = acceptScreen.ScrSource->current_value;
                     }


        }
		dsData.curScreen =  SCREEN_MAIN_MENU;
	 }
	 if(dsData.pushedButton==BUTTON_ENTER)
	 {
		dsData.pushedButton=BUTTON_NO;
		acceptScreen.index++;
		if(acceptScreen.index>1) acceptScreen.index=0;
	 }
}
  void ScreenAcceptionUpdate(void)
  {
		 LCD_buffer_clear();
		 LCD_DrawString(2, 0, 16, 0,  "Изменение знач.?",LCD_All_Bolt,NO_INVERSE);
		 if(menu_item->typeOfData>200){
		 LCD_DrawString(2, 16, 2, 0,  "НА",LCD_All_Bolt,NO_INVERSE);
		 LCD_DrawUFloat(30,16,1,20,acceptScreen.ScrSource->current_value,acceptScreen.ScrSource->digits,acceptScreen.ScrSource->fractional,ABB_Font);
		  }

		 if (acceptScreen.index==0) {
		 LCD_DrawString(0, 35, 7, 0,  "Примен.",LCD_All_Bolt,INVERSE);
		 LCD_DrawString(59, 30, 9, 0,  "Примен. и",LCD_All_Bolt,NO_INVERSE);
		 LCD_DrawString(56, 45, 11, 0,  "сохр. в ПЗУ",LCD_All_Bolt,NO_INVERSE);
		 }
		 else
		 {
		 LCD_DrawString(0, 35, 7, 0,  "Примен.",LCD_All_Bolt,NO_INVERSE);
		 LCD_DrawString(59, 30, 9, 0,  "Примен. и",LCD_All_Bolt,INVERSE);
		 LCD_DrawString(56, 45, 11, 0,  "сохр. в ПЗУ",LCD_All_Bolt,INVERSE);
         }
  }

void RefreshMenu(void)
{
	  switch(dsData.curScreen)
      {
		  case SCREEN_MAIN_DATA:   {
		  ButtonMainScreen();
		  MainScreenUpdate();          break;}

		  case SCREEN_MAIN_MENU:
          {
		  ButtonsControlMenu();
          ControlMenuUpdate();
          break;}

		  case SCREEN_SET_PPARAM:
		  {ButtonsSetParam(tmpScreen);
		  SetParamUpdate(tmpScreen);             				break;}

          case SCREEN_PROGRESS:
		  {ButtonProgressUpdate();
		  ProgressUpdate();             				break;}

		  case SCREEN_ERRORS:
		  {ButtonErrorUpdate();
		  ErrorListUpdate();             				break;}

		  case SCREEN_ACCEPT:
		  {ButtonAcceptionUpdate();
		  ScreenAcceptionUpdate();             				break;}
	  }
	 //MenuSelectItemUpdate();
	  SetMenu();

}
